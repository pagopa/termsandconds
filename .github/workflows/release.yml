name: Release a new version

on:
  pull_request:
    types:
      - closed
    branches:
      - main

jobs:
  release:
    if: github.event.pull_request.merged == true
    
    runs-on: ubuntu-latest
    
    outputs:
      new_release_published: ${{ steps.semantic.outputs.new_release_published }}
      new_release_version: ${{ steps.semantic.outputs.new_release_version }}

    steps:
      #
      # Checkout the source code.
      #
      - name: Checkout the source code
        uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3
        with:
          token: ${{ secrets.GIT_PAT }}
          fetch-depth: 0

      #
      # Calculation of the new version (dry-run).
      #
      - name: Calculation of the new version (dry-run)
        uses: cycjimmy/semantic-release-action@v3
        id: semantic
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          semantic_version: 19
          branch: main
          extra_plugins: |
            @semantic-release/release-notes-generator@10.0.3
            @semantic-release/git@10.0.1
          dry_run: true

      #
      # Setup the JDK.
      #
      - name: Setup the JDK
        if: steps.semantic.outputs.new_release_published == 'true'
        uses: actions/setup-java@0ab4596768b603586c0de567f2430c30f5b0d2b0 # v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      #
      # Update of pom.xml with the new version + Git add + commit + push of the updated pom.xml.
      #
      - name: Update of pom.xml with the new version + Git add + commit + push of the updated pom.xml
        if: steps.semantic.outputs.new_release_published == 'true'
        run: |
          mvn versions:set -DnewVersion=${{ steps.semantic.outputs.new_release_version }}
          git config user.name "GitHub Workflow"
          git config user.email "<>"
          git add pom.xml
          git commit -m "pom.xml updated with new version ${{ steps.semantic.outputs.new_release_version }}"
          git push origin main

      #
      # Calculation of the new version (again) with tagging + releasing + etc.
      #
      - name: Calculation of the new version (again) with tagging + releasing + etc
        if: steps.semantic.outputs.new_release_published == 'true'
        uses: cycjimmy/semantic-release-action@v3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          semantic_version: 19
          branch: main
          extra_plugins: |
            @semantic-release/release-notes-generator@10.0.3
            @semantic-release/git@10.0.1
          dry_run: false

      #
      # Build dependencies + Build native image + Docker build + login + push.
      #
      - name: Build dependencies + Build native image + Docker build + login + push
        if: steps.semantic.outputs.new_release_published == 'true'
        run: |
          mvn clean validate -Pbootstrap
          mvn clean package -Pnative
          docker build -f src/main/docker/Dockerfile.native-micro -t ghcr.io/${{ github.repository }}:latest -t ghcr.io/${{ github.repository }}:${{ steps.semantic.outputs.new_release_version }} .
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
          docker push -a ghcr.io/${{ github.repository }}

